TODO

basic multiplayer card playing (done)

game logic:
valid playable cards based on initial play and currently selected cards
working play comparator for multi plays

room deletion
update /rooms on all events (eg. joining from rooms page, joining directly from url)
refactor /rooms route to use unique namespace for each user (with authorization)


lobby ui, loading screen

Valid plays
Check if player can declare (won the round before, no one has declared yet or over turning with 2 or reinforcing declare)
Check if play is valid based on cards played;
Check winner of a round

the following are priority

implement compareHands
implement client side analyzehand
implement loading table clientside

var matchingPlay
var subPlayI;

// in render loop
if phase == 'Play':
	if playerPlayTurn == playerPosition:
		if initialPlay:
			// make sure you follow suit and stuff
			if hand has unselected cards in initalPlay's suit:
				if selected.length = initialPlay.length
					disable all but selected
				else:
					matchingPlay = true;
					for o from initialPlay.order to -1:
						if o < initalPlay.order:
							matchingPlay = false;
						available = find plays of order o matching suit in hand
						if any available play is partially selected, disable all other cards but the play
						if there are available plays that are not all fully selected
							break
			else:
				if selected.length = initialPlay.length
					disable all but selected
					matchingPlay = false;
				else:
					enable all
		else:
			if selected.length:
				enable selected[0]'s suit
				enablebutton
			else:
				enable all cards
				disable button
	else:
		disable all cards
		disable button